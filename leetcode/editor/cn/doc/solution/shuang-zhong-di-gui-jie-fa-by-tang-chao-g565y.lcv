* 

```
class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
        def equal(tree1,tree2):
            if tree1 and tree2:
                if tree1.val!=tree2.val:
                    return False
                return equal(tree1.left, tree2.left) and equal(tree1.right, tree2.right)
            elif not tree1 and not tree2:
                return True
            else:
                return False

        if root:
            if equal(root,subRoot):
                return True
            return self.isSubtree(root.left,subRoot) or self.isSubtree(root.right,subRoot)
        return False
```

