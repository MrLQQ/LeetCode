
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if (root != null) {
            int leftSize = minDepth(root.left);
            int rightSize = minDepth(root.right);
            return leftSize == 0 || rightSize == 0 ? leftSize + rightSize + 1 : Math.min(leftSize, rightSize) + 1;
        } else {
            return 0;
        }
    }
}

//runtime:10 ms
//memory:60.5 MB
